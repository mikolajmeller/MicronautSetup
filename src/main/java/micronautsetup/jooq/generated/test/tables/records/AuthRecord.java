/*
 * This file is generated by jOOQ.
 */
package micronautsetup.jooq.generated.test.tables.records;


import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import micronautsetup.jooq.generated.test.tables.Auth;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthRecord extends UpdatableRecordImpl<AuthRecord> implements Record5<UInteger, UInteger, byte[], Byte, Timestamp> {

    private static final long serialVersionUID = -307914269;

    /**
     * Setter for <code>test.auth.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.auth.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>test.auth.user_id</code>.
     */
    public void setUserId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.auth.user_id</code>.
     */
    public UInteger getUserId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>test.auth.token</code>.
     */
    public void setToken(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.auth.token</code>.
     */
    public byte[] getToken() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>test.auth.revoked</code>.
     */
    public void setRevoked(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.auth.revoked</code>.
     */
    public Byte getRevoked() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>test.auth.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.auth.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UInteger, UInteger, byte[], Byte, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UInteger, UInteger, byte[], Byte, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Auth.AUTH.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return Auth.AUTH.USER_ID;
    }

    @Override
    public Field<byte[]> field3() {
        return Auth.AUTH.TOKEN;
    }

    @Override
    public Field<Byte> field4() {
        return Auth.AUTH.REVOKED;
    }

    @Override
    public Field<Timestamp> field5() {
        return Auth.AUTH.CREATED;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getUserId();
    }

    @Override
    public byte[] component3() {
        return getToken();
    }

    @Override
    public Byte component4() {
        return getRevoked();
    }

    @Override
    public Timestamp component5() {
        return getCreated();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getUserId();
    }

    @Override
    public byte[] value3() {
        return getToken();
    }

    @Override
    public Byte value4() {
        return getRevoked();
    }

    @Override
    public Timestamp value5() {
        return getCreated();
    }

    @Override
    public AuthRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public AuthRecord value2(UInteger value) {
        setUserId(value);
        return this;
    }

    @Override
    public AuthRecord value3(byte... value) {
        setToken(value);
        return this;
    }

    @Override
    public AuthRecord value4(Byte value) {
        setRevoked(value);
        return this;
    }

    @Override
    public AuthRecord value5(Timestamp value) {
        setCreated(value);
        return this;
    }

    @Override
    public AuthRecord values(UInteger value1, UInteger value2, byte[] value3, Byte value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthRecord
     */
    public AuthRecord() {
        super(Auth.AUTH);
    }

    /**
     * Create a detached, initialised AuthRecord
     */
    public AuthRecord(UInteger id, UInteger userId, byte[] token, Byte revoked, Timestamp created) {
        super(Auth.AUTH);

        set(0, id);
        set(1, userId);
        set(2, token);
        set(3, revoked);
        set(4, created);
    }
}
