import groovy.xml.MarkupBuilder
import org.jooq.codegen.GenerationTool
import org.yaml.snakeyaml.Yaml

apply from: 'properties.gradle'

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation "org.jooq:jooq:${versions.jooq}"
	implementation "org.jooq:jooq-meta:${versions.jooq}"
	implementation "org.jooq:jooq-codegen:${versions.jooq}"
	compile "mysql:mysql-connector-java:8.0.19"
}

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}

	dependencies {
		classpath "org.jooq:jooq:${versions.jooq}"
		classpath "org.jooq:jooq-meta:${versions.jooq}"
		classpath "org.jooq:jooq-codegen:${versions.jooq}"
		classpath "mysql:mysql-connector-java:8.0.19"
		classpath "org.yaml:snakeyaml:1.8"
	}
}

class JooqGenerate extends DefaultTask {
	@Input
	@Option(option = 'database', description = 'database for which code will be generated')
	String databaseName = 'test'
}

task jooqGenerate(type: JooqGenerate) {
	group 'tools'
	description 'Generate Jooq classes'

	def config = new Yaml().load(new File('src/main/resources/application.yml').newInputStream())
	def databaseConfig = config.jooq.datasources[databaseName]

	doFirst {
		def targetPath = "src/main/java/${rootProject.name.toLowerCase()}/jooq/generated/${databaseName}"
		if (!file(targetPath).exists()) {
			mkdir targetPath
		}
	}

	doLast {
		def writer = new StringWriter()
		// Watch out for this caveat when using MarkupBuilder with "reserved names"
		// - http://stackoverflow.com/a/11389034/521799
		new MarkupBuilder(writer)
						.configuration() {
							jdbc() {
								driver(databaseConfig.driverClassName)
								url(databaseConfig.url)
								user(databaseConfig.username)
								password(databaseConfig.password)
							}
							generator() {
								database() {
									inputSchema(databaseName)
								}
								generate()
								target() {
									packageName("${rootProject.name.toLowerCase()}.jooq.generated.${databaseName}")
									directory('src/main/java')
								}
							}
						}
		GenerationTool.generate(writer.toString())
	}
}
